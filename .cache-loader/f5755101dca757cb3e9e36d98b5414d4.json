{"remainingRequest":"/Users/anderson/Desktop/editora/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/anderson/Desktop/editora/node_modules/ts-loader/index.js??ref--10-3!/Users/anderson/Desktop/editora/node_modules/angular-router-loader/src/index.js!/Users/anderson/Desktop/editora/node_modules/tslint-loader/index.js!/Users/anderson/Desktop/editora/src/main/webapp/app/ngx-admin/@theme/components/layout-direction-switcher/layout-direction-switcher.component.ts","dependencies":[{"path":"/Users/anderson/Desktop/editora/src/main/webapp/app/ngx-admin/@theme/components/layout-direction-switcher/layout-direction-switcher.component.ts","mtime":1529378731928},{"path":"/Users/anderson/Desktop/editora/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/anderson/Desktop/editora/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/anderson/Desktop/editora/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/anderson/Desktop/editora/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/anderson/Desktop/editora/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/anderson/Desktop/editora/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar theme_1 = require(\"@nebular/theme\");\nvar takeWhile_1 = require(\"rxjs/operators/takeWhile\");\nvar LayoutDirectionSwitcherComponent = /** @class */ (function () {\n    function LayoutDirectionSwitcherComponent(directionService) {\n        var _this = this;\n        this.directionService = directionService;\n        this.directions = theme_1.NbLayoutDirection;\n        this.alive = true;\n        this.vertical = false;\n        this.currentDirection = this.directionService.getDirection();\n        this.directionService.onDirectionChange()\n            .pipe(takeWhile_1.takeWhile(function () { return _this.alive; }))\n            .subscribe(function (newDirection) { return _this.currentDirection = newDirection; });\n    }\n    LayoutDirectionSwitcherComponent.prototype.toggleDirection = function (newDirection) {\n        this.directionService.setDirection(newDirection);\n    };\n    LayoutDirectionSwitcherComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], LayoutDirectionSwitcherComponent.prototype, \"vertical\", void 0);\n    LayoutDirectionSwitcherComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'ngx-layout-direction-switcher',\n            template: \"\\n    <ngx-switcher\\n      [firstValue]=\\\"directions.RTL\\\"\\n      [secondValue]=\\\"directions.LTR\\\"\\n      [firstValueLabel]=\\\"'RTL'\\\"\\n      [secondValueLabel]=\\\"'LTR'\\\"\\n      [value]=\\\"currentDirection\\\"\\n      (valueChange)=\\\"toggleDirection($event)\\\"\\n      [vertical]=\\\"vertical\\\"\\n    >\\n    </ngx-switcher>\\n  \",\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof theme_1.NbLayoutDirectionService !== \"undefined\" && theme_1.NbLayoutDirectionService) === \"function\" && _a || Object])\n    ], LayoutDirectionSwitcherComponent);\n    return LayoutDirectionSwitcherComponent;\n    var _a;\n}());\nexports.LayoutDirectionSwitcherComponent = LayoutDirectionSwitcherComponent;\n",{"version":3,"file":"/Users/anderson/Desktop/editora/src/main/webapp/app/ngx-admin/@theme/components/layout-direction-switcher/layout-direction-switcher.component.ts","sourceRoot":"","sources":["/Users/anderson/Desktop/editora/node_modules/angular-router-loader/src/index.js!/Users/anderson/Desktop/editora/node_modules/tslint-loader/index.js!/Users/anderson/Desktop/editora/src/main/webapp/app/ngx-admin/@theme/components/layout-direction-switcher/layout-direction-switcher.component.ts"],"names":[],"mappings":";;;AAAA,sCAA4D;AAC5D,wCAA6E;AAC7E,sDAAqD;AAiBrD;IAOE,0CAAoB,gBAA0C;QAA9D,iBAMC;QANmB,qBAAgB,GAAhB,gBAAgB,CAA0B;QAN9D,eAAU,GAAG,yBAAiB,CAAC;QAE/B,UAAK,GAAG,IAAI,CAAC;QAEJ,aAAQ,GAAY,KAAK,CAAC;QAGjC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QAE7D,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE;aACtC,IAAI,CAAC,qBAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,UAAA,YAAY,IAAI,OAAA,KAAI,CAAC,gBAAgB,GAAG,YAAY,EAApC,CAAoC,CAAC,CAAC;IACrE,CAAC;IAED,0DAAe,GAAf,UAAgB,YAAY;QAC1B,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;IACnD,CAAC;IAED,sDAAW,GAAX;QACE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAhBQ;QAAR,YAAK,EAAE;;sEAA2B;IALxB,gCAAgC;QAf5C,gBAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,QAAQ,EAAE,+TAWT;SACF,CAAC;qEAQsC,gCAAwB,oBAAxB,gCAAwB;OAPnD,gCAAgC,CAsB5C;IAAD,uCAAC;;CAAA,AAtBD,IAsBC;AAtBY,4EAAgC","sourcesContent":["import { Component, OnDestroy, Input } from '@angular/core';\nimport { NbLayoutDirectionService, NbLayoutDirection } from '@nebular/theme';\nimport { takeWhile } from 'rxjs/operators/takeWhile';\n\n@Component({\n  selector: 'ngx-layout-direction-switcher',\n  template: `\n    <ngx-switcher\n      [firstValue]=\"directions.RTL\"\n      [secondValue]=\"directions.LTR\"\n      [firstValueLabel]=\"'RTL'\"\n      [secondValueLabel]=\"'LTR'\"\n      [value]=\"currentDirection\"\n      (valueChange)=\"toggleDirection($event)\"\n      [vertical]=\"vertical\"\n    >\n    </ngx-switcher>\n  `,\n})\nexport class LayoutDirectionSwitcherComponent implements OnDestroy {\n  directions = NbLayoutDirection;\n  currentDirection: NbLayoutDirection;\n  alive = true;\n\n  @Input() vertical: boolean = false;\n\n  constructor(private directionService: NbLayoutDirectionService) {\n    this.currentDirection = this.directionService.getDirection();\n\n    this.directionService.onDirectionChange()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(newDirection => this.currentDirection = newDirection);\n  }\n\n  toggleDirection(newDirection) {\n    this.directionService.setDirection(newDirection);\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n}\n"]}]}